/*
 * https://www.cphayim.me/blog/nodejs-note01.html
 * requir() 是一个导入一个功能模块，里面的参数是模块名
 * express 是基于 node.js 的web应用开发框架，提供了一系列强大的特性，
 * 帮助你创建各种web应用和移动设备应用
 */
var express = require("express");
// 创建一个服务器对象
var app = express();
// 实现静态资源的共享发布
// use() 是一个中间件，中间件是运行在请求和响应中间的一个应用程序，用于请求开始之前对数据进行处理或者是请求结束之后对数据进行清理
// express.static() 可以方便的托管静态文件，参数是存放静态资源的文件夹名
// 静态文件：浏览器可以直接访问或者直接下载的文件，不需要服务端参与处理，比如图片，html文件，js文件，css文件...
app.use("/",express.static(__dirname + "/static"));
// get 添加一个请求方式为get的接口
// 参数1: 是接口的路径，将来客户端可以通过服务器地址 + 接口的路径来进行访问这个接口
// 参数2: 是一个回调函数，当客户端访问这个接口时，函数就会被调用。
//      回调函数中有两个参数:
//      req: request 请求 表示客户端发来的请求，里面包含的有本次请求的所有参数
//      res: response 返回 表示本次请求要返回个客户端的数据
app.get('/', function(req, res) {
    // send() 给客户端发送数据
    // res.send('Hello World!`````')
    res.send('<h1>你好！我是Cphayim。</h1>');
});
// app 调用这个方法，来进行监听指定的端口号，当有请求到达时
// 会转给上面对应请求方式的接口进行处理
// 参数1: 端口号可以区分不同的服务，只有该端口目前没有被使用，都可以用
// 参数2: 当web应用监听到该端口被访问，会执行第二个参数，即回调函数
//        同时会把请求传给对应的请求处理方法
app.listen(3000, function() {
    console.log('服务器开启中...');
});